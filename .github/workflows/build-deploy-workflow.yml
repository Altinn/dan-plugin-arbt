name: dan-plugin-arbt

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/README.md'
      - '**/*.yml'
  workflow_dispatch:

env:
  ROOT_SOLUTION_PATH: ./
  FUNCTION_PROJECT_PATH: src/Altinn.Dan.Plugin.Arbeidstilsynet
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/nadobe/Nadobe/_packaging/Packages/nuget/v3/index.json
  BUILD_CONFIGURATION: 'Release'

  FUNCTIONAPP_NAME_TEST: 'func-esarbt-test-dev'
  FUNCTIONAPP_NAME_PROD: 'func-esarbt-prod-prod'
  RESOURCE_GROUP_PROD: 'rg-arbt-es-prod'
  DOTNET_VERSION: '6.0.x'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: 'Get the latest source code'
        uses: actions/checkout@v2

      - name: 'Setup .NET'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }}

      - name: 'Restore, build & test'
        run: |
          dotnet restore
          dotnet build --no-restore
          dotnet test --no-build --verbosity normal
        working-directory: ${{ env.ROOT_SOLUTION_PATH }}

      - name: 'Build and publish Function App for Release'
        run: |
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet publish -c '${{ env.BUILD_CONFIGURATION }}' --no-restore -o './published-app'
        working-directory: ${{ env.FUNCTION_PROJECT_PATH }}

      - name: 'Publish artifact'
        uses: actions/upload-artifact@v2
        with:
          path: ${{ env.FUNCTION_PROJECT_PATH }}/published-app

  deploy-dev:
    runs-on: ubuntu-latest
    environment: 'dev'
    needs: build-and-publish
    steps:
      - uses: actions/checkout@v2
      - name: 'Deploy to dev'
        uses: ./.github/workflows/composite/deploy
        with:
          function_app_name: ${{ env.FUNCTIONAPP_NAME_TEST }}
          publish_profile: ${{ secrets.AZURE_FUNCTION_PUBLISH_CREDS }}

  deploy-staging:
    runs-on: ubuntu-latest
    environment: 'staging'
    needs: deploy-dev
    steps:
      - uses: actions/checkout@v2
      - name: 'Deploy to staging'
        uses: ./.github/workflows/composite/deploy
        with:
          function_app_name: ${{ env.FUNCTIONAPP_NAME_PROD }}
          publish_profile: ${{ secrets.AZURE_FUNCTION_PUBLISH_CREDS }}

  swap-staging-production:
    runs-on: ubuntu-latest
    environment: 'production'
    needs: deploy-staging
    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Swap staging and production'
        run: |
          az webapp deployment slot swap -g '${{ env.RESOURCE_GROUP_PROD }}' -n '${{ env.FUNCTIONAPP_NAME_PROD }}' --slot 'staging' --target-slot 'production'
      - name: 'Azure logout'
        run: |
          az logout

  redeploy-staging:
    runs-on: ubuntu-latest
    environment: 'staging'
    needs: swap-staging-production
    steps:
      - uses: actions/checkout@v2
      - name: 'Redeploy to staging'
        uses: ./.github/workflows/composite/deploy
        with:
          function_app_name: ${{ env.FUNCTIONAPP_NAME_PROD }}
          publish_profile: ${{ secrets.AZURE_FUNCTION_PUBLISH_CREDS }}
